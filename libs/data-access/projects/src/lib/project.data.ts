import { TagName } from '@portfolio/taxonomy';

export interface ProjectData {
  id: string;
  title: string;
  projectType: string;
  compactDescription: string;
  keyAchievements: string;
  fullDescription: string;
  features: string[];
  highlights: string[];
  /**
   * Technologies, methodologies, tools, skills etc. used in this project.
   * This may contain all keywords relevant for the CV, recruiters, and potential customers.
   * NOTE: the property name `technologies` is kept for backwards compatibility, even though it is not fully accurate.
   */
  technologies: TagName[];
  role: string;
  team: string;
  fromTo: string;
  duration: string;
  location: string;
  workMode: string;
  company: string;
  industry: string; // TODO taxonomy: consider adding industries to the taxonomy to match/highlight them
}

export const ALL_PROJECT_DATA: ProjectData[] = [
  {
    id: 'language-learning-app',
    title: 'AI-Powered Language Learning App',
    projectType: 'Mobile App',
    compactDescription:
      'Revolutionary language learning app that generates picture-based stories using AI, automatically adapting to user learning levels.',
    keyAchievements:
      'Full-stack ownership • AI story generation • Automatic internationalization • Adaptive learning algorithm',
    fullDescription:
      "Development of a comprehensive language learning application for all languages that generates picture-based stories using AI. The app automatically adapts to the user's learning level and offers extensive customization options. Focus on reading comprehension and listening comprehension with autonomous development responsibility covering planning, development, testing, maintenance, and legal aspects.",
    features: [
      'AI-generated stories with pictures and audio',
      'Adaptive learning algorithm',
      'Fully automatic multi-language support',
      'Reading comprehension focus',
      'Listening comprehension training',
      'User progress tracking',
    ],
    highlights: [
      'Solely responsible for entire application lifecycle',
      'Implemented AI-powered content generation using multiple AI providers',
      'Built scalable cloud infrastructure on AWS',
      'Developed cross-platform mobile app',
    ],
    technologies: [
      'Java',
      'Spring Boot',
      'React Native',
      'AWS',
      'OpenAI',
      'Expo',
      'TypeScript',
      'Redux',
      'Sentry',
      'GitHub',
      'npm',
      'Maven',
      'Mono Repo',
      'DynamoDB',
      'S3',
      'CDK',
      'CloudFormation',
      'CloudWatch',
      'AppConfig',
      'Elastic Beanstalk',
      'API Gateway',
      'IAM',
      'IAM Identity Center',
      'AWS Organizations',
      'Polly',
    ],
    role: 'Project Manager & Full-Stack Developer',
    team: 'Solo development',
    fromTo: '08/2024 – Present',
    duration: '1 year 11 months',
    location: 'Remote',
    workMode: 'Remote',
    company: 'Oliver Stadie IT GmbH',
    industry: 'Education Technology',
  },
  {
    id: 'lottery-websites',
    title: 'Enterprise Lottery Platform',
    projectType: 'Web App',
    compactDescription:
      'Maintenance and improvement of complex lottery websites with custom frontend framework and micro-frontend architecture.',
    keyAchievements:
      'Custom CI/CD tool development • Web vitals performance optimization • Technical consulting',
    fullDescription:
      'Maintained and improved existing lottery websites in a Scrum-like environment. Worked on the custom frontend framework of a complex micro-frontend architectured online shop for multiple lottery platforms. Provided technical consulting to team and managers while building a custom CI/CD tool to ensure company-wide optimal website performance through web vitals monitoring.',
    features: [
      'Micro-frontend architecture',
      'Custom frontend framework',
      'Multi-lottery platform',
      'Performance monitoring',
      'CI/CD pipeline',
      'Web vitals optimization',
      'Complex online shop',
      'Scrum workflow integration',
    ],
    highlights: [
      'Built custom CI/CD tool for performance monitoring',
      'Optimized web vitals across multiple lottery platforms',
      'Provided technical consulting',
      'Worked with complex micro-frontend architecture',
    ],
    technologies: [
      'Angular',
      'Node.js',
      'NestJS',
      'TypeScript',
      'RxJS',
      'Nx',
      'SCSS',
      'HTML',
      'CSS',
      'Jest',
      'Cypress',
      'Sentry',
      'GitHub',
      'Jira',
      'Confluence',
      'npm',
      'yarn',
      'Docker',
      'Kubernetes',
      'Java',
      'Spring Boot',
      'Lighthouse',
      'Web Vitals',
      'Puppeteer',
      'Micro Frontends',
      'Microservices',
      'Jenkins',
      'Redash',
      'SQL',
      'DataDog',
      'Splunk',
      'GTM',
    ],
    role: 'Web Developer & Technical Consultant',
    team: 'Large Scrum Team',
    fromTo: '08/2021 – 06/2022',
    duration: '11 months',
    location: 'Remote',
    workMode: 'Remote',
    company: 'Large Lottery Company',
    industry: 'eCommerce / Gaming',
  },
  {
    id: 'unicorn-ecommerce',
    title: 'Custom E-Commerce Framework Development',
    projectType: 'Web App',
    compactDescription:
      "Building and maintaining online shops for third-party customers using a major e-commerce company's custom framework.",
    keyAchievements:
      'Multi-client platform development • Cross-team collaboration • Custom CMS integration • Regular on-time delivery • Analytics • SEO',
    fullDescription:
      "Built and maintained online shops for various third-party customers using a major e-commerce company's proprietary framework. Collaborated closely with designers, customers, other technical teams, and suppliers to deliver customized shopping experiences. Focused on creating scalable and maintainable solutions within the existing framework ecosystem.",
    features: [
      'Custom e-commerce framework',
      'Custom CMS',
      'Multi-client architecture',
      'Third-party integrations',
      'Responsive design',
      'Customer-specific customizations',
      'Supplier integration',
      'Performance optimization',
      'Cross-platform compatibility',
    ],
    highlights: [
      'Delivered multiple client projects within framework constraints',
      'Collaborated effectively with diverse stakeholder groups',
      'Implemented customer-specific requirements efficiently',
    ],
    technologies: [
      'Angular',
      'Node.js',
      'Express',
      'TypeScript',
      'RxJS',
      'Nx',
      'SCSS',
      'HTML',
      'CSS',
      'Jest',
      'Jasmine',
      'Cypress',
      'Karma',
      'AWS',
      'Sentry',
      'GitLab',
      'Jira',
      'Confluence',
      'npm',
    ],
    role: 'Web Developer',
    team: 'Cross-functional Team',
    fromTo: '04/2020 – 05/2021',
    duration: '1 year 2 months',
    location: 'Remote',
    workMode: 'Remote',
    company: 'Unicorn E-Commerce Startup',
    industry: 'E-Commerce',
  },
  {
    id: 'insurance-calculator',
    title: 'Insurance Calculation & Contract Platform',
    projectType: 'Web App',
    compactDescription:
      'Complex insurance calculation website with contract closing functionality and advanced form validation.',
    keyAchievements:
      'Complex form development • Insurance price calculation • Data verification • Custom component library usage',
    fullDescription:
      'Developed a comprehensive website for calculating insurance premiums and closing contracts digitally. Created complex forms to calculate insurance prices, verify input data, and guide users through the contract process. Utilized an existing custom web component library to maintain consistency and efficiency in development.',
    features: [
      'Insurance price calculator',
      'Contract closing system',
      'Complex form validation',
      'Data verification',
      'Custom web components',
      'User guidance system',
      'Responsive design',
      'Multi-step workflows',
    ],
    highlights: [
      'Implemented sophisticated calculation algorithms',
      'Built complex multi-step form workflows',
      'Integrated with existing component library effectively',
      'Delivered accurate insurance pricing functionality',
    ],
    technologies: [
      'Angular',
      'TypeScript',
      'SASS',
      'HTML5',
      'CSS',
      'JavaScript',
      'Stencil',
      'Fractal',
      'Lodash',
      'Jasmine',
      'Karma',
      'Node.js',
      'Express',
      'GitHub',
      'Jira',
      'Confluence',
      'TFS',
      'npm',
    ],
    role: 'Web Developer',
    team: 'Development Team',
    fromTo: '08/2019 – 11/2019',
    duration: '4 months',
    location: 'Berlin, Germany',
    workMode: 'On-site',
    company: 'edenspiekermann',
    industry: 'Insurance',
  },
  {
    id: 'fintech-portfolio-management',
    title: 'B2B Financial Portfolio Management Platform',
    projectType: 'Web App Backend',
    compactDescription:
      'Backend development for banks and portfolio managers to manage financial products with REST APIs and microservices architecture.',
    keyAchievements:
      'Microservices architecture • REST API development • Message broker implementation • CI/CD setup',
    fullDescription:
      'Built and improved a comprehensive B2B platform enabling banks and portfolio managers to efficiently manage financial products. Provided REST endpoints and message broker integration for frontend and other microservices. Established initial architecture patterns and workflows including testing frameworks and CI/CD pipelines for scalable fintech operations.',
    features: [
      'Financial product management',
      'REST API endpoints',
      'Message broker integration',
      'Microservices architecture',
      'Bank integration',
      'Portfolio management tools',
      'Automated testing',
      'CI/CD pipeline',
    ],
    highlights: [
      'Architected initial microservices infrastructure',
      'Implemented robust message broker communication',
      'Established comprehensive testing and deployment workflows',
      'Built scalable REST API architecture',
    ],
    technologies: [
      'Node.js',
      'Express',
      'GraphQL',
      'TypeScript',
      'mocha',
      'chai',
      'Jasmine',
      'Jest',
      'RabbitMQ',
      'MongoDB',
      'Docker',
      'yarn',
      'JSON',
      'GitLab',
    ],
    role: 'Backend Developer',
    team: 'Backend Development Team',
    fromTo: '04/2018 – 12/2018',
    duration: '9 months',
    location: 'Multiple locations and remote',
    workMode: 'Hybrid',
    company: 'vestr',
    industry: 'FinTech Startup',
  },
  {
    id: 'airberlin-booking-app',
    title: 'Flight Booking Application Frontend',
    projectType: 'Web App',
    compactDescription:
      'Frontend maintenance and improvement of high-traffic flight booking application in Scrum environment.',
    keyAchievements:
      'High-traffic, high-revenue environment • Multi-team coordination • Scrum implementation',
    fullDescription:
      'Maintained and improved the frontend of a new flight booking application in a high-traffic, high-turnover environment using Scrum methodology. Coordinated effectively with multiple teams including UI/UX, Backend, and Operations to ensure seamless user experience and system reliability during peak booking periods.',
    features: [
      'Flight booking interface',
      'High-traffic optimization',
      'Real-time availability',
      'Payment integration',
      'Multi-team coordination',
      'Performance monitoring',
      'User experience focus',
      'Scrum implementation',
    ],
    highlights: [
      'Maintained performance in high-traffic environment',
      'Coordinated effectively across multiple technical teams',
      'Implemented Scrum practices for rapid development cycles',
    ],
    technologies: [
      'AngularJS',
      'SASS',
      'HTML5',
      'CSS',
      'JavaScript',
      'jQuery',
      'Lodash',
      'npm',
      'Grunt',
      'Bower',
      'Jasmine',
      'Karma',
      'Zeplin',
      'Jira',
      'Confluence',
      'BitBucket',
    ],
    role: 'Web Developer',
    team: 'Large Scrum Team',
    fromTo: '05/2017 – 08/2017',
    duration: '4 months',
    location: 'Berlin, Germany',
    workMode: 'On-site',
    company: 'AirBerlin',
    industry: 'Airline / eCommerce',
  },
  {
    id: 'self-driving-car-demo',
    title: 'Self-Driving Car Control Demo App',
    projectType: 'Mobile App',
    compactDescription:
      'Demo app for controlling cutting-edge autonomous vehicle prototype with route programming and media control capabilities.',
    keyAchievements:
      'Autonomous vehicle integration • Ahead of time delivery • Cross-platform development • UI/UX collaboration • International teamwork',
    fullDescription:
      'Developed a demonstration application to control a visionary self-driving car prototype with cross-platform compatibility, especially for iOS. Provided functionality to program the route the car would drive autonomously and control various car media systems including lighting and music. Collaborated closely with multiple UI/UX designers and Chinese consultants in an international development environment.',
    features: [
      'Autonomous route programming',
      'Car media control',
      'Light system control',
      'Music system integration',
      'Cross-platform compatibility',
      'iOS optimization',
      'Real-time car communication',
      'Intuitive user interface',
    ],
    highlights: [
      'Integrated with cutting-edge autonomous vehicle technology',
      'Delivered cross-platform mobile solution with iOS focus',
      'Collaborated in international, multicultural team environment',
      'Implemented innovative car control interfaces',
    ],
    technologies: [
      'Angular',
      'TypeScript',
      'HTML5',
      'CSS',
      'JavaScript',
      'Ionic',
      'Cordova',
      'GitLab',
      'npm',
      'Webpack',
      'iOS',
      'XCode',
      'Swiper',
    ],
    role: 'Mobile App Developer',
    team: 'International UI/UX Team',
    fromTo: '03/2017 – 04/2017',
    duration: '2 months',
    location: 'Potsdam, Germany',
    workMode: 'On-site',
    company: "World's Largest Car Maker",
    industry: 'Automotive',
  },
  {
    id: 'pokemon-go-manager',
    title: 'Pokémon Go Manager',
    projectType: 'Web App',
    compactDescription:
      'Consumer-facing web application that helps Pokémon Go players organize and evaluate their captured Pokémon with a mobile-friendly interface and server-backed data storage.',
    keyAchievements:
      'Full-stack delivery • Mobile-first UX design • Reliable calculation engine for ranking captured Pokémon • Containerized deployment on AWS ECS',
    fullDescription:
      'Built as a single-developer product to help players prioritize which captured Pokémon to keep, train or evolve by estimating hidden quality metrics and providing ranking tools. The solution combines a React-based responsive frontend with an Express/Mongoose backend, OAuth2 login, and MongoDB persistence. The service was containerized and deployed to Amazon ECS with automated image builds on Docker Hub to ensure stable, repeatable releases.',
    features: [
      'Import and analyze captured Pokémon (scan/upload) to build a managed collection',
      'Estimate hidden quality metrics (individual values) to prioritize training/evolution',
      'Search, filter, rate and sort Pokémon by quality and custom tags',
      'Mobile-first responsive inputs and UI for easy use on phones',
      'Secure login and user data persistence via REST API',
      'Containerized CI/CD pipeline for reliable deployments',
    ],
    highlights: [
      'End-to-end single-developer delivery from design to production',
      'Improved mobile usability with custom responsive input components',
      'Production deployment on AWS (ECS) with Docker Hub continuous builds',
      'Clear, data-driven prioritization workflow that helped users decide which Pokémon to focus on',
    ],
    technologies: [
      'React',
      'JavaScript',
      'HTML5',
      'CSS',
      'Bootstrap',
      'Node.js',
      'Express',
      'MongoDB',
      'AWS',
      'Docker',
      'Webpack',
      'npm',
      'GitHub',
    ],
    role: 'Full-Stack Developer',
    team: 'Solo development',
    fromTo: '08/2016 - 01/2017',
    duration: '6 months',
    location: 'Remote',
    workMode: 'Remote',
    company: 'Personal Project',
    industry: 'Gaming',
  },
  {
    id: 'computer-vision-clothes-structure',
    title: 'Computer Vision – Analyzing the Structure of Clothes',
    projectType: 'Research Project',
    compactDescription:
      'Student research project on computer vision, developing an algorithm to separate structural patterns (mesh) and textures in clothing images, enabling retexturing for an AR virtual mirror.',
    keyAchievements:
      'Published student research paper • Novel structure–texture separation algorithm • Application to AR virtual try-on • Generalization to regular patterns (e.g., building facades) • C++ implementation and evaluation',
    fullDescription:
      "In this student research project, I developed and evaluated a computer vision algorithm to analyze clothing and fabric images by identifying and separating their structural mesh and surface textures. The algorithm enables the reapplication of different textures onto extracted structures, forming a component of an augmented reality 'virtual mirror' concept for virtual try-on. Implemented in C++, the approach was tested on various images and shown to generalize beyond clothing to other domains with regular patterns such as building facades. The complete research paper (in German) documents the motivation, methodology, and evaluation results.",
    features: [
      'Extract structural mesh from clothing and fabric images',
      'Separate texture layers from photographs',
      'Apply new textures to extracted structures (AR virtual try-on)',
      'Generalizable to other regular patterns (e.g., architectural facades)',
      'Evaluated on diverse image samples',
      'Published student research paper (German)',
    ],
    highlights: [
      'Novel algorithm for structure–texture separation',
      'Component of an augmented reality virtual mirror',
      'Flexible retexturing for clothing images',
      'Generalizable approach beyond clothing (e.g., facades)',
    ],
    technologies: [
      'C++',
      'Computer Vision',
      'Pattern Recognition',
      'Image Processing',
    ],
    role: 'Research Student',
    team: 'Solo research',
    fromTo: '03/2012 – 01/2014',
    duration: '2 years',
    location: 'Berlin, Germany',
    workMode: 'Remote',
    company: 'Student Project',
    industry: 'Academic Research',
  },
  {
    id: 'stomap',
    title: 'Stomap – Project Management Tool',
    projectType: 'Web App',
    compactDescription:
      "Story-mapping based project management tool for handling large amounts of GitHub issues with a table-based UI and drag'n'drop editing.",
    keyAchievements:
      "Story mapping visualization • GitHub-native storage • Drag'n'Drop issue editing • Hierarchic issues and dependencies",
    fullDescription:
      "A project management tool focused on managing large numbers of GitHub issues using a second dimension: a table / story-mapping board. The approach reduces the number of issues to compare at any time, adds visual overview, and keeps information stored directly in GitHub. The project implements drag'n'drop editing, hierarchic issues, and dependency support while keeping public projects free to use.",
    features: [
      'Table / story-mapping board to arrange issues in a second dimension',
      "Drag'n'Drop issue editing",
      'Hierarchic issues with dependency visualization',
      'GitHub API integration (issues stored in GitHub)',
      'Reduced issue comparison surface for large issue sets',
      'Free for public projects',
    ],
    highlights: [
      'Applied story-mapping concept to GitHub issues',
      "Built an interactive table-based UI with drag'n'drop",
      'Kept all project data in GitHub to avoid information loss',
      'Designed for scaling to thousands of issues',
    ],
    technologies: [
      'TypeScript',
      'HTML',
      'CSS',
      'JavaScript',
      'Angular',
      'jQuery',
      'jQuery UI',
      'GitHub',
      'GitHub API',
      'tsd',
      'OAuth2',
      'Underscore',
      'yo',
      'Yeoman',
      'npm',
      'Grunt',
      'Bower',
      'Karma',
      'TeddyMocks',
      'mocha',
      'chai',
      'Travis CI',
      'Eclipse',
    ],
    role: 'Frontend Developer',
    team: 'Solo development',
    fromTo: '05/2015 - 02/2017',
    duration: '~2 years',
    location: 'Remote',
    workMode: 'Remote',
    company: 'Personal Project',
    industry: 'Productivity Tools',
  },
  {
    id: 'state-based-testing-software',
    title: 'State Based Testing Software',
    projectType: 'Desktop App',
    compactDescription:
      'Stand-alone, model-based testing software for the automotive industry — systematic test case specification, generation and automated execution.',
    keyAchievements:
      'Lead developer • Technical coordination • Model-based test generation • Integration with DOORS • Test coverage gap analysis',
    fullDescription:
      'Led the technical development of a stand-alone testing software used in the automotive industry. The product acted mainly as glue-code between many third-party libraries and provided a model-based workflow (statecharts) to specify, generate and automatically execute test cases.',
    features: [
      'Intuitive user interface for test authors',
      'Model-based (UML state machine) test specification',
      'Systematic test case generation',
      'Automated test case execution',
      'Test objectives management',
      'Linking to DOORS (requirements/specification tool)',
      'Find test coverage gaps',
      'Search and reporting functions',
    ],
    highlights: [
      'Coordinated technical development as lead developer',
      'Built integrations to multiple third-party libraries and enterprise tools',
      'Introduced model-based testing workflows (UML state machine) to increase systematic coverage',
      'Delivered tooling used by multiple teams across locations',
    ],
    technologies: [
      'Jira',
      'Confluence',
      'UML',
      'UML state machine',
      'Java',
      'XML',
      'XSD',
      'CSS',
      'Eclipse RCP',
      'Eclipse EMF',
      'OSGI',
      'Eclipse GMF',
      'Eclipse PDE',
      'Ant',
      'Custom Scripts',
      'JUnit',
      'QF-Test',
      'Jenkins',
      'SVN',
      'Eclipse',
      'DOORS',
    ],
    role: 'Lead Developer',
    team: 'Large Cross-functional Team',
    fromTo: '01/2015 - 06/2015',
    duration: '6 months',
    location: 'Berlin, Germany',
    workMode: 'on-site',
    company: 'Berner & Mattner',
    industry: 'Automotive',
  },
  {
    id: 'asteroids',
    title: 'Asteroids — P2P Multiplayer Remake',
    projectType: 'Web App',
    compactDescription:
      'Browser-based remake of the classic Asteroids with real-time multiplayer as a case study for TypeScript, peer-to-peer architecture, automated testing and CI.',
    keyAchievements:
      'WebRTC peer-to-peer networking • No central server • TypeScript project structure best practices • Automated testing setup • Continuous Integration pipeline',
    fullDescription:
      'Spare-time project built with a roommate to explore modern web game development and engineering practices. The focus was less on the game itself and more on experimenting with peer-to-peer networking (browser-to-browser via WebRTC), disciplined TypeScript project structuring, exaggerated application of the Law of Demeter to reduce coupling, and establishing automated tests, builds, and CI for a clean developer workflow.',
    features: [
      'Asteroids arcade gameplay',
      'Real-time multiplayer action',
      'Peer-to-peer browser-to-browser communication (WebRTC)',
      'No central game server required',
      'Runs in modern desktop and mobile browsers',
    ],
    highlights: [
      'Used as a case study to apply and document GitHub best practices',
      'Established automated testing with Karma, mocha, chai, and TeddyMocks',
      'Set up automated builds with npm, grunt, bower, tsd, and Yeoman',
      'Continuous Integration with Travis CI and GitHub',
      'Applied the Law of Demeter to minimize coupling and improve scalability',
    ],
    technologies: [
      'TypeScript',
      'HTML',
      'CSS',
      'JavaScript',
      'UML',
      'JSON',
      'tsd',
      'yo',
      'Yeoman',
      'npm',
      'Grunt',
      'Bower',
      'Karma',
      'TeddyMocks',
      'Custom Test Framework',
      'mocha',
      'chai',
      'GitHub',
      'Travis CI',
      'Eclipse',
      'Software Architecture',
      'Software Design',
      'Project Management',
      'Game Development',
      'Web Development',
      'Testing',
      'UI Testing',
      'WebRTC',
      'Peer-to-Peer',
      'Phaser',
      'peerJS',
      'requireJS',
    ],
    role: 'Game Developer',
    team: '2 developers',
    fromTo: '09/2014 – 06/2015',
    duration: '9 months',
    location: 'Berlin, Germany',
    workMode: 'On-site',
    company: 'Personal Project',
    industry: 'Gaming',
  },
  {
    id: 'gui-testing-tool',
    title:
      'Smart GUI Testing — Combining Capture-&-Replay with Model-Based Automation',
    projectType: 'Research & Prototype',
    compactDescription:
      'Model-based GUI testing approach that combines capture-&-replay convenience with systematic model-based test generation; final thesis and prototype plugin for a commercial testing tool.',
    keyAchievements:
      'Final thesis & scientific paper released • Prototype plugin for TESTONA • Automatic model generation • Systematic combinatorial test sequence generation • Successfully tested on real applications • Validated with an industrial partner',
    fullDescription:
      'This project was about solving a common industry pain point: GUI tests are either too fragile (capture-&-replay) or too complex (model-based). I designed and built a prototype that combines the best of both worlds. The tool can scan an existing GUI, automatically create a simplified model of its screens and states, and then generate systematic test cases that cover important interactions. These tests can be automatically executed on the real application, making regression testing faster and more reliable. The approach was implemented as a plugin for the commercial TESTONA testing tool and validated in collaboration with Berner & Mattner in an automotive software context.',
    features: [
      'Record user interactions and turn them into reusable models',
      'Automatic generation of compact GUI models from real applications',
      'Systematic test-case generation ensuring broader coverage than manual tests',
      'Automatic execution of generated test cases on real GUIs',
      'Easy-to-understand visual models of screens and states',
      'Prototype integrated into the commercial TESTONA tool',
      'Backed by a published thesis and scientific paper',
    ],
    highlights: [
      'Delivered a working prototype with real-world validation',
      'Published scientific paper and diploma thesis',
      'Made GUI testing easier, faster, and more reliable',
      'Bridged academic research with an industrial partner in automotive software',
    ],
    technologies: [
      'UML',
      'UML state machine',
      'Model-based testing',
      'Capture-and-Replay',
      'Classification Tree Method',
      'Widget Trees',
      'Systematic Test Generation',
      'UI Testing',
      'Java',
      'C++',
      'XML',
      'XSD',
      'Eclipse',
      'Eclipse RCP',
      'Eclipse EMF',
      'OSGI',
      'Eclipse Graphiti',
      'JNativeHook',
      'FRUIT',
      'JUnit',
      'TESTONA',
      'Scientific Paper',
      'Diploma Thesis',
    ],
    role: 'Researcher & Developer',
    team: 'Solo development, loose cooperations',
    fromTo: '03/2013 - 01/2015',
    duration: '2 years',
    location: 'Berlin, Germany',
    workMode: 'hybrid',
    company: 'Berner & Mattner Systemtechnik GmbH',
    industry: 'Automotive',
  },
  {
    id: 'blubber-virtual-pocket-money',
    title: 'Blubber – Virtual Pocket Money',
    projectType: 'Web App',
    compactDescription:
      '24-hour hackathon app that lets parents assign real-world tasks to kids and reward them with virtual pocket money redeemable in local stores.',
    keyAchievements:
      'Built end-to-end prototype in 24 hours • PayPal API integration • QR-code based redemption flow • Deployed on Google App Engine',
    fullDescription:
      'Created during PayPal’s Battle Hack within 24 hours in a team of three developers. Parents define tasks and reward completion with a virtual currency that children can spend at participating local stores. The system integrates PayPal for payments, generates QR codes for secure redemption, and uses a lightweight Java backend deployed to Google App Engine.',
    features: [
      'Parent task assignment with virtual currency rewards',
      'Child wallet for managing balances',
      'QR code generation and scanning for in-store redemption',
      'PayPal payment processing integration',
      'Local merchant participation focus',
      'Web-based prototype delivered in 24 hours',
    ],
    highlights: [
      'End-to-end functional prototype in a 24-hour hackathon',
      'Integrated external payment provider (PayPal APIs)',
      'Implemented QR-code based redemption flow',
      'Deployed and demoed on Google App Engine',
      'Worked in a focused 3-developer team',
    ],
    technologies: [
      'HTML',
      'JavaScript',
      'CSS',
      'Java',
      'Java Servlets',
      'Python',
      'PayPal API',
      'jQuery',
      'jQuery.qrcode',
      'Bootstrap',
      'Underscore',
      'Google App Engine',
      'Maven',
      'Gradle',
      'JUnit',
      'mockito',
      'GitHub',
      'Eclipse',
      'Netbeans',
      'IntelliJ IDEA',
      'QR Codes',
      'Raspberry Pi',
      'USB Monitor',
      'REST',
    ],
    role: 'Full-Stack Developer',
    team: '3 developers',
    fromTo: '06/2014 – 06/2014',
    duration: '2 days',
    location: 'Berlin, Germany',
    workMode: 'On-site',
    company: 'Personal Project',
    industry: 'FinTech / Payments',
  },
  {
    id: 'minecraft-clone',
    title: 'Minecraft Clone',
    projectType: 'Desktop App',
    compactDescription:
      'Technical feasibility prototype of a Java-based 3D sandbox game exploring high-performance rendering, ECS architecture, and runtime world editing using jMonkeyEngine.',
    keyAchievements:
      'Block-based 3D world rendering • Entity–component system experimentation • Runtime level editing • Engine and UI integration (jMonkeyEngine, Nifty GUI)',
    fullDescription:
      'A technical exploration to prototype a Minecraft-like experience in Java with a strong focus on performance and architecture. In a two-person collaboration, we evaluated 3D rendering with jMonkeyEngine, an entity–component (ECS) architecture using Artemis, and UI composition with Nifty GUI. The effort served as a feasibility study for high-performance Java game development, runtime world manipulation, and 3D engine integration. The prototype phase was concluded after fulfilling its exploration goals.',
    features: [
      'Block-based 3D world rendering (mesh-generated from a 3D grid)',
      'Entity–component system (ECS) architecture',
      'Runtime level/world changes',
      'In-game UI experiments (menus, HUD)',
      'Desktop Java deployment',
      'Source control across SVN and GitHub',
    ],
    highlights: [
      'Explored high-performance Java 3D rendering',
      'Applied ECS concepts to gameplay entities',
      'Integrated rendering engine and UI toolkit',
      'Collaborated as a small two-person team',
    ],
    technologies: [
      'Java',
      '3D',
      'OpenGL',
      'Computer Graphics',
      'Eclipse',
      'SVN',
      'GitHub',
      'Google App Engine',
      'Game Development',
      'jMonkeyEngine',
      'Artemis-ODB',
      'Nifty GUI',
      'Entity Component System',
      'JSci',
      'Google Code',
    ],
    role: 'Game Developer',
    team: '2 developers',
    fromTo: '07/2013 – 08/2013',
    duration: '1 month',
    location: 'Berlin, Germany',
    workMode: 'On-site',
    company: 'Personal Project',
    industry: 'Gaming',
  },
  {
    id: 'playotope-platform-game-maker',
    title: 'Playotope – Platform Game Maker for the Web',
    projectType: 'Web App',
    compactDescription:
      'Online platform game maker that provided a WYSIWYG editor enabling end users to create, customize, and share their own platform (jump’n’run) games with friends.',
    keyAchievements:
      'Built a browser-based game editor • Integrated social sharing & high scores • Worked on end-to-end game engine and web platform • Consulted and created software architecture and design (UML)',
    fullDescription:
      'Playotope is an online platform game maker that enabled end users to create, customize, and share their own platform (jump’n’run) games with friends. I worked as a freelancing developer for Playotope GmbH building the web platform and custom game engine, integrating social features (Facebook & Twitter), analytics and a sharing/commenting ecosystem. Additionally, I heavily consulted, discussed, and created software architecture and design, especially using UML diagrams, to ensure a flexible and reliable system. The project included backend and frontend work using Java and standard web technologies and was deployed on Google App Engine.',
    features: [
      'WYSIWYG game editor used by end users to create and share platform games',
      'Multiple theme/settings (Pirates, Politics, X-Mas, etc.)',
      'Comic visual style and custom assets',
      'Social integration (Facebook, Twitter) and sharing',
      'High scores and user comments',
      'Browser-first game engine with embed/publishing support',
    ],
    highlights: [
      'Developed core parts of a custom game engine for the web',
      'Implemented social sharing, high score and comment features',
      'Delivered full-stack features as a freelancing developer in a small team',
      'Consulted and contributed to software architecture and design (UML)',
    ],
    technologies: [
      'Java',
      'HTML',
      'CSS',
      'JavaScript',
      'Facebook',
      'Twitter',
      'Google Analytics',
      'Google App Engine',
      'Eclipse',
      'SVN',
      'TortoiseSVN',
      'Custom Test Framework',
      'Custom Game Engine',
      'UML',
      'Software Design',
      'Software Architecture',
      'Facebook API',
      'Twitter API',
    ],
    role: 'Full-Stack Developer',
    team: '2 developers, 1 artist',
    fromTo: '2009 – 2013',
    duration: '5 years',
    location: 'Remote',
    workMode: 'Freelance',
    company: 'Playotope GmbH',
    industry: 'Gaming',
  },
  {
    id: 'ai-robotics',
    title: 'AI & Robotics – Humanoid Robot Research',
    projectType: 'Research Project',
    compactDescription:
      'Research on sensor fusion, adaptive grasping and walking for humanoid robots (Nao) and additional modular sensors.',
    keyAchievements:
      'Developed and tested adaptive grasping method • Built custom force-sensing modules for robot hands • Successfully lifted fragile and heavy objects safely • Improved walking stability using multi-sensor control • Co-authored peer-reviewed publication on adaptive grasping',
    fullDescription:
      'Worked for one year in the Cognitive Robotics Group at Humboldt University, Berlin, on improving how humanoid robots interact with the physical world. The project combined multiple sensor inputs (touch, motion, motor feedback, vision) to enable robots to adapt their grip and walking dynamically. I designed and integrated modular tactile sensors, developed adaptive control algorithms in C++, and validated them on NAO humanoid robots. The system successfully handled both delicate objects (e.g. paper cups) and heavier ones (e.g. bottles) without damage. Similar sensor-fusion principles were also applied to improve walking stability. Results on adaptive grasping were published in a peer-reviewed paper.',
    features: [
      'Sensor fusion from tactile, proprioceptive, and vision data',
      'Custom-built force-sensing modules integrated into NAO hands',
      'Adaptive grasping algorithms running in real time',
      'Walking stability improvements under load',
      'Validated on real humanoid robots with diverse objects',
      'Co-authored scientific publication on adaptive grasping',
    ],
    highlights: [
      'Robots successfully grasped fragile and heavy objects safely',
      'Prototyped and integrated modular tactile sensors',
      'Improved walking balance with multi-sensor feedback',
      'Published adaptive grasping results in an academic paper',
    ],
    technologies: [
      'C++',
      'Robotics Control Systems',
      'Computer Vision',
      'Sensor Fusion',
      'Prototyping',
      'Nao',
    ],
    role: 'Research Student',
    team: 'Academic Research Group',
    fromTo: '10/2010 – 08/2011',
    duration: '1 year',
    location: 'Berlin, Germany',
    workMode: 'On-site',
    company: 'Humboldt University (AI Workgroup)',
    industry: 'Academic Research',
  },
  {
    id: 'wikip3dia',
    title: 'Wikip3dia — 3D Wikipedia Visualization',
    projectType: 'Web App',
    compactDescription:
      'Interactive 3D representation of Wikipedia: each article is a room, each link a door/corridor. Built with raw WebGL (OpenGL ES 2.0) and hand-written GLSL shaders.',
    keyAchievements:
      'Early WebGL demo • Real-time 3D navigation • Live Wikipedia API scene generation • Custom GLSL shaders • Graphical gimmicks: Reflections, Fog, Phong, mipmapping, lens flare • Texture-atlas door labels',
    fullDescription:
      'Built during the Computer Graphics practicum (WS 2009/10) at Humboldt-Universität zu Berlin. Each Wikipedia article is represented as a room. Links become doors and corridors, enabling first-person spatial navigation through article networks. Implemented in raw WebGL with custom vertex and fragment shaders (GLSL). The scene is generated on-the-fly from the Wikipedia API via AJAX. The prototype ran in early WebGL-enabled browser builds. It demonstrates real-time rendering, live data-driven scene generation, and interactive navigation by a two-student team.',
    features: [
      'First-person keyboard/mouse navigation (FPS-style)',
      'Articles as 3D rooms; links as doors/corridors',
      'Dynamic scene generation from Wikipedia API (AJAX)',
      'Custom GLSL shaders (vertex + fragment)',
      'Phong lighting: ambient, directional, point lights with attenuation',
      'Fog for depth cueing',
      'Lens flare (additive alpha blending; depth test disabled for flare quads)',
      'Real-time floor reflections via mirrored scene render (no stencil buffer), alpha-blended',
      'Mipmapping',
      'Backface culling',
      'Generated textures: shadow decals; texture atlas for door labels to fit within ~32-texture constraint.',
      'Random starting article; room props (boxes) with fake shadow decals',
    ],
    highlights: [
      'Early raw WebGL + GLSL demo (OpenGL ES 2.0 pipeline)',
      'Live Wikipedia API integration for content-driven 3D scenes',
      'Accompanying technical short report (German) documenting implementation details.',
    ],
    technologies: [
      'WebGL',
      'GLSL',
      'JavaScript',
      'HTML',
      'HTML Canvas',
      'CSS',
      'Wikipedia API',
      'AJAX',
      'Computer Graphics',
      'Shader programming',
      'First-person camera',
      '3D',
    ],
    role: 'Student',
    team: '2 students',
    fromTo: '10/2009 – 02/2010',
    duration: '5 months',
    location: 'Humboldt-Universität zu Berlin, Germany',
    workMode: 'Hybrid',
    company: 'HU Berlin — Computer Graphics Practicum',
    industry: 'Education / Research',
  },
  {
    id: 'freelancing-it-professional',
    title: 'Freelancing IT Professional',
    projectType: 'Various Projects',
    compactDescription:
      'Long-term freelancing career delivering diverse IT solutions across multiple industries and technologies.',
    keyAchievements:
      '25+ years experience • Multi-industry expertise • Technology adaptation • Independent project delivery',
    fullDescription:
      'Extensive freelancing career spanning over two decades, delivering diverse IT solutions across multiple industries. Demonstrated ability to adapt to new technologies, work independently, manage client relationships, and deliver high-quality solutions across various project types and technological stacks.',
    features: [
      'Multi-industry experience',
      'Technology adaptation',
      'Independent project management',
      'Client relationship management',
      'Diverse solution delivery',
      'Continuous learning',
      'Quality assurance',
      'Flexible engagement models',
    ],
    highlights: [
      'Successfully delivered projects across 25+ years',
      'Adapted to evolving technology landscape',
      'Built strong client relationships and repeat business',
      'Maintained high quality standards across all engagements',
    ],
    technologies: [
      'Various Technologies',
      'Web Development',
      'Mobile Development',
      'Backend Systems',
      'Frontend Framework',
      'Database Systems',
      'Cloud Platforms',
      'DevOps Tools',
      'Project Management',
      'QA',
    ],
    role: 'Freelancing IT Professional',
    team: 'Various team configurations',
    fromTo: 'Since 2000',
    duration: '25+ years',
    location: 'Various locations',
    workMode: 'Flexible',
    company: 'Independent / Various Clients',
    industry: 'Various industries',
  },
];
