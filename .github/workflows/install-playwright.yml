name: Install Playwright Dependencies

on:
  workflow_call:

jobs:
  install-playwright:
    name: Install Playwright Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 💾 Restore NPM dependencies cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-deps-${{ hashFiles('package-lock.json', '.github/workflows/install-npm-deps.yml') }}
          restore-keys: |
            ${{ runner.os }}-npm-deps-
          fail-on-cache-miss: true

      # see https://github.com/microsoft/playwright/issues/7249#issuecomment-1154603556
      - name: 🔍 Get installed Playwright version
        id: playwright-version
        run: |
          $version = (npm list @playwright/test --depth=0 --json | ConvertFrom-Json).dependencies.'@playwright/test'.version
          echo "version=$version" >> $env:GITHUB_OUTPUT
        shell: pwsh

      # see https://github.com/microsoft/playwright/issues/7249#issuecomment-1154603556
      - name: 💾 Cache Playwright browsers
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: '~/.cache/ms-playwright'
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}-${{ hashFiles('.github/workflows/install-playwright.yml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: 🎭 Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
