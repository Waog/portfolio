{
  "commit-message-editor.dynamicTemplate": [
    "{type}{scope}: {emoji} {description}",
    "",
    "{body}",
    "",
    "{breaking_change}{footer}"
  ],
  "commit-message-editor.staticTemplate": [
    "feat: Short description",
    "",
    "Message body",
    "",
    "Message footer"
  ],
  "commit-message-editor.tokens": [
    {
      "description": "Type of changes",
      "label": "Type",
      "name": "type",
      "options": [
        {
          "description": "A bug fix",
          "label": "fix"
        },
        {
          "description": "A new feature",
          "label": "feat"
        },
        {
          "label": "---",
          "value": ""
        },
        {
          "description": "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)",
          "label": "build"
        },
        {
          "description": "Updating grunt tasks etc; no production code change",
          "label": "chore"
        },
        {
          "description": "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)",
          "label": "ci"
        },
        {
          "description": "Documentation only changes",
          "label": "docs"
        },
        {
          "description": "A code change that improves performance",
          "label": "perf"
        },
        {
          "description": "A code change that neither fixes a bug nor adds a feature",
          "label": "refactor"
        },
        {
          "label": "revert"
        },
        {
          "description": "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)",
          "label": "style"
        },
        {
          "description": "Adding missing tests or correcting existing tests",
          "label": "test"
        }
      ],
      "type": "enum"
    },
    {
      "description": "A scope may be provided to a commit‚Äôs type, to provide additional contextual information and is contained within parenthesis, e.g., \"feat(parser): add ability to parse arrays\".",
      "label": "Scope",
      "name": "scope",
      "options": [
        {
          "description": "",
          "label": "frontend",
          "value": "frontend"
        },
        {
          "description": "",
          "label": "backend",
          "value": "backend"
        },
        {
          "description": "",
          "label": "infrastructure",
          "value": "infrastructure"
        },
        {
          "description": "",
          "label": "root",
          "value": "root"
        },
        {
          "description": "",
          "label": "multiple",
          "value": "multiple"
        }
      ],
      "prefix": "(",
      "suffix": ")",
      "type": "enum"
    },
    {
      "label": "Emoji",
      "name": "emoji",
      "options": [
        {
          "description": "",
          "label": "ü™≤ bugfix",
          "value": "ü™≤"
        },
        {
          "description": "",
          "label": "‚ôªÔ∏è refactor",
          "value": "‚ôªÔ∏è"
        },
        {
          "description": "",
          "label": "‚ú® add feature",
          "value": "‚ú®"
        },
        {
          "description": "",
          "label": "üóëÔ∏è remove feature",
          "value": "üóëÔ∏è"
        },
        {
          "description": "",
          "label": "üì¶ build process, CI/CD",
          "value": "üì¶"
        },
        {
          "description": "",
          "label": "üöß WIP - squash later",
          "value": "üöß"
        }
      ],
      "type": "enum"
    },
    {
      "description": "Short description in the subject line.",
      "label": "Short description",
      "multiline": false,
      "name": "description",
      "type": "text"
    },
    {
      "description": "Optional body",
      "label": "Body",
      "lines": 5,
      "maxLines": 10,
      "multiline": true,
      "name": "body",
      "type": "text"
    },
    {
      "default": false,
      "label": "Breaking change",
      "name": "breaking_change",
      "type": "boolean",
      "value": "BREAKING CHANGE: "
    },
    {
      "description": "Optional footer",
      "label": "Footer",
      "multiline": true,
      "name": "footer",
      "type": "text"
    }
  ],
  "commit-message-editor.view.defaultView": "form",
  "commit-message-editor.view.visibleViews": "form",
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.fixAll": "never",
    "source.fixAll.sortJSON": "never",
    "source.organizeImports": "never"
  },
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnSave": true,
  "eslint.useFlatConfig": true,
  "eslint.validate": ["javascript", "typescript", "html"],
  "git.inputValidation": true,
  "git.inputValidationLength": 100,
  "git.inputValidationSubjectLength": 100,
  "nxConsole.generateAiAgentRules": true,
  "cSpell.words": ["prerender"]
}
