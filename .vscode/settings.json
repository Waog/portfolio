{
  "nxConsole.generateAiAgentRules": true,
  "git.inputValidation": true,
  "git.inputValidationSubjectLength": 100,
  "git.inputValidationLength": 100,
  "commit-message-editor.staticTemplate": [
    "feat: Short description",
    "",
    "Message body",
    "",
    "Message footer"
  ],
  "commit-message-editor.dynamicTemplate": [
    "{type}{scope}: {emoji} {description}",
    "",
    "{body}",
    "",
    "{breaking_change}{footer}"
  ],
  "commit-message-editor.tokens": [
    {
      "label": "Type",
      "name": "type",
      "type": "enum",
      "options": [
        {
          "label": "fix",
          "description": "A bug fix"
        },
        {
          "label": "feat",
          "description": "A new feature"
        },
        {
          "label": "---",
          "value": ""
        },
        {
          "label": "build",
          "description": "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)"
        },
        {
          "label": "chore",
          "description": "Updating grunt tasks etc; no production code change"
        },
        {
          "label": "ci",
          "description": "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)"
        },
        {
          "label": "docs",
          "description": "Documentation only changes"
        },
        {
          "label": "perf",
          "description": "A code change that improves performance"
        },
        {
          "label": "refactor",
          "description": "A code change that neither fixes a bug nor adds a feature"
        },
        {
          "label": "revert"
        },
        {
          "label": "style",
          "description": "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"
        },
        {
          "label": "test",
          "description": "Adding missing tests or correcting existing tests"
        }
      ],
      "description": "Type of changes"
    },
    {
      "label": "Scope",
      "name": "scope",
      "type": "enum",
      "description": "A scope may be provided to a commit‚Äôs type, to provide additional contextual information and is contained within parenthesis, e.g., \"feat(parser): add ability to parse arrays\".",
      "prefix": "(",
      "suffix": ")",
      "options": [
        {
          "label": "frontend",
          "value": "frontend",
          "description": ""
        },
        {
          "label": "backend",
          "value": "backend",
          "description": ""
        },
        {
          "label": "infrastructure",
          "value": "infrastructure",
          "description": ""
        },
        {
          "label": "root",
          "value": "root",
          "description": ""
        },
        {
          "label": "multiple",
          "value": "multiple",
          "description": ""
        }
      ]
    },
    {
      "label": "Emoji",
      "name": "emoji",
      "type": "enum",
      "options": [
        {
          "label": "ü™≤ bugfix",
          "value": "ü™≤",
          "description": ""
        },
        {
          "label": "‚ôªÔ∏è refactor",
          "value": "‚ôªÔ∏è",
          "description": ""
        },
        {
          "label": "‚ú® add feature",
          "value": "‚ú®",
          "description": ""
        },
        {
          "label": "üóëÔ∏è remove feature",
          "value": "üóëÔ∏è",
          "description": ""
        },
        {
          "label": "üì¶ build process, CI/CD",
          "value": "üì¶",
          "description": ""
        },
        {
          "label": "üöß WIP - squash later",
          "value": "üöß",
          "description": ""
        }
      ]
    },
    {
      "label": "Short description",
      "name": "description",
      "description": "Short description in the subject line.",
      "type": "text",
      "multiline": false
    },
    {
      "label": "Body",
      "name": "body",
      "description": "Optional body",
      "type": "text",
      "multiline": true,
      "lines": 5,
      "maxLines": 10
    },
    {
      "label": "Breaking change",
      "name": "breaking_change",
      "type": "boolean",
      "value": "BREAKING CHANGE: ",
      "default": false
    },
    {
      "label": "Footer",
      "name": "footer",
      "description": "Optional footer",
      "type": "text",
      "multiline": true
    }
  ],
  "commit-message-editor.view.defaultView": "form",
  "commit-message-editor.view.visibleViews": "form"
}
